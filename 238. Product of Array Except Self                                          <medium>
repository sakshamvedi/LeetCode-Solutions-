[Visit Question](https://leetcode.com/problems/product-of-array-except-self/)





Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]


Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]






-----------------------------------------------------------------algorithm with code------------------------------------------------------------------------------
1. If any array have one zero than except that zero index if we find product the ans is 0
2. if any array have two zero than all array is 0
3. if no zero than first find product of array and than use array[i] = productofarray/nums[i]  to get product of array 









class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] num = new int[nums.length];
        int zeroes = 0;
        int zeroindex = 0;
        int prod = 1;
        for(int i = 0;i<nums.length;i++)
        {
            if(nums[i]==0)
            {
                zeroes = zeroes+1;
                zeroindex = i;               
            }
            else
            {
                prod = prod*nums[i];
            }
        }
        for(int i = 0 ;i<nums.length;i++)
        {
            if(zeroes>1)
            {
                num[i]=0;
            }
            else if(zeroes==1)
            {
               if(i==zeroindex)
               {
                   num[i] = prod;
               }
                else
                {
                    num[i] = 0;
                }
            }
            else
            {
                num[i] = prod/nums[i];
            }
        }
        return num;
    }
}
